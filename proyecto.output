Terminals unused in grammar

    MULTIPLY
    DIVIDE
    MEMCPY


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | statements function

    5 function: LBRACE statements RBRACE

    6 statement: expression
    7          | expression SEMICOLON
    8          | declaration
    9          | declaration SEMICOLON
   10          | if_statement
   11          | iteration_statement
   12          | gets
   13          | strcmp
   14          | system
   15          | return
   16          | strcpy
   17          | PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | COMMENTLINE
   19          | COMMENT

   20 operador: PLUS EQUALS
   21         | MINUS
   22         | PLUS

   23 expression: WORD
   24           | INTEGER
   25           | POINTER
   26           | INCREMENT
   27           | expression LBRACKET WORD RBRACKET
   28           | expression indexArray
   29           | expression LPAREN WORD RPAREN
   30           | expression LPAREN WORD indexArray RPAREN
   31           | expression EQUALS WORD
   32           | expression EQUALS cast
   33           | expression EQUALS INTEGER
   34           | expression operador INTEGER
   35           | expression EQUALITY WORD
   36           | expression EQUALITY INTEGER
   37           | expression INEQUALITY WORD
   38           | expression INEQUALITY INTEGER
   39           | expression LTHAN WORD
   40           | expression LTHAN INTEGER
   41           | expression GTHAN WORD
   42           | expression GTHAN INTEGER

   43 indexArray: LBRACKET INTEGER RBRACKET

   44 declaration: type declarator_list

   45 type: INT
   46     | CHAR
   47     | VOID

   48 declarator_list: declarator
   49                | declarator_list COMMA declarator

   50 declarator: WORD
   51           | WORD EQUALS INTEGER
   52           | WORD LPAREN RPAREN
   53           | WORD LPAREN parameter_list RPAREN
   54           | WORD indexArray
   55           | POINTER LBRACKET RBRACKET

   56 parameter_list: parameter_declaration
   57               | parameter_list COMMA parameter_declaration

   58 parameter_declaration: type WORD
   59                      | type POINTER
   60                      | type POINTER LBRACKET RBRACKET
   61                      | PRINTSTRING

   62 if_statement: IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | if_statement ELSE LBRACE statements RBRACE

   65 iteration_statement: WHILE LPAREN expression RPAREN statement
   66                    | FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function

   67 gets: GETS LPAREN expression RPAREN
   68     | gets SEMICOLON

   69 strcmp: STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | strcmp SEMICOLON

   71 system: SYSTEM LPAREN PRINTSTRING RPAREN
   72       | system SEMICOLON

   73 return: RETURN INTEGER
   74       | return SEMICOLON

   75 strcpy: STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | strcpy SEMICOLON

   77 cast: LPAREN type RPAREN
   78     | LPAREN type POINTER RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 62 63
    ELSE (259) 63 64
    WHILE (260) 65
    FOR (261) 66
    INT (262) 45
    CHAR (263) 46
    VOID (264) 47
    RETURN (265) 73
    LBRACE (266) 5 62 63 64
    RBRACE (267) 5 62 63 64
    LPAREN <str> (268) 17 29 30 52 53 62 63 65 66 67 69 71 75 77 78
    RPAREN (269) 17 29 30 52 53 62 63 65 66 67 69 71 75 77 78
    LBRACKET (270) 27 43 55 60
    RBRACKET (271) 27 43 55 60
    COMMA (272) 49 57 69 75
    SEMICOLON (273) 7 9 17 66 68 70 72 74 76
    PRINTSTRING (274) 61 69 71
    EQUALS (275) 20 31 32 33 51
    EQUALITY (276) 35 36
    INEQUALITY (277) 37 38
    LTHAN (278) 39 40
    GTHAN (279) 41 42
    PLUS (280) 20 22
    INCREMENT <str> (281) 26
    MINUS (282) 21
    MULTIPLY (283)
    DIVIDE (284)
    PRINTF (285) 17
    COMMENTLINE (286) 18
    COMMENT (287) 19
    STRCPY (288) 75
    STRCMP (289) 69
    GETS (290) 67
    MEMCPY (291)
    SYSTEM (292) 71
    POINTER <str> (293) 25 55 59 60 78
    INTEGER <str> (294) 24 33 34 36 38 40 42 43 51 73
    WORD <str> (295) 23 27 29 30 31 35 37 39 41 50 51 52 53 54 58 69 75


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    statements (43)
        on left: 2 3 4
        on right: 1 3 4 5 62 63 64
    function (44)
        on left: 5
        on right: 4 66
    statement (45)
        on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19
        on right: 2 3 65
    operador (46)
        on left: 20 21 22
        on right: 34
    expression <str> (47)
        on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 6 7 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 62 65 66 67
    indexArray (48)
        on left: 43
        on right: 28 30 54
    declaration (49)
        on left: 44
        on right: 8 9
    type (50)
        on left: 45 46 47
        on right: 44 58 59 60 77 78
    declarator_list (51)
        on left: 48 49
        on right: 44 49
    declarator (52)
        on left: 50 51 52 53 54 55
        on right: 48 49
    parameter_list (53)
        on left: 56 57
        on right: 53 57
    parameter_declaration (54)
        on left: 58 59 60 61
        on right: 17 56 57
    if_statement (55)
        on left: 62 63 64
        on right: 10 64
    iteration_statement (56)
        on left: 65 66
        on right: 11
    gets (57)
        on left: 67 68
        on right: 12 68
    strcmp (58)
        on left: 69 70
        on right: 13 63 70
    system (59)
        on left: 71 72
        on right: 14 72
    return (60)
        on left: 73 74
        on right: 15 74
    strcpy (61)
        on left: 75 76
        on right: 16 76
    cast (62)
        on left: 77 78
        on right: 32


State 0

    0 $accept: . program $end
    1 program: . statements
    2 statements: . statement
    3           | . statements statement
    4           | . statements function
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    program              go to state 19
    statements           go to state 20
    statement            go to state 21
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 1

   62 if_statement: IF . LPAREN expression RPAREN LBRACE statements RBRACE
   63             | IF . LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE

    LPAREN  shift, and go to state 32


State 2

   65 iteration_statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 33


State 3

   66 iteration_statement: FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function

    LPAREN  shift, and go to state 34


State 4

   45 type: INT .

    $default  reduce using rule 45 (type)


State 5

   46 type: CHAR .

    $default  reduce using rule 46 (type)


State 6

   47 type: VOID .

    $default  reduce using rule 47 (type)


State 7

   73 return: RETURN . INTEGER

    INTEGER  shift, and go to state 35


State 8

   26 expression: INCREMENT .

    $default  reduce using rule 26 (expression)


State 9

   17 statement: PRINTF . LPAREN parameter_declaration RPAREN SEMICOLON

    LPAREN  shift, and go to state 36


State 10

   18 statement: COMMENTLINE .

    $default  reduce using rule 18 (statement)


State 11

   19 statement: COMMENT .

    $default  reduce using rule 19 (statement)


State 12

   75 strcpy: STRCPY . LPAREN WORD COMMA WORD RPAREN

    LPAREN  shift, and go to state 37


State 13

   69 strcmp: STRCMP . LPAREN WORD COMMA PRINTSTRING RPAREN

    LPAREN  shift, and go to state 38


State 14

   67 gets: GETS . LPAREN expression RPAREN

    LPAREN  shift, and go to state 39


State 15

   71 system: SYSTEM . LPAREN PRINTSTRING RPAREN

    LPAREN  shift, and go to state 40


State 16

   25 expression: POINTER .

    $default  reduce using rule 25 (expression)


State 17

   24 expression: INTEGER .

    $default  reduce using rule 24 (expression)


State 18

   23 expression: WORD .

    $default  reduce using rule 23 (expression)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 41


State 20

    1 program: statements .  [$end]
    3 statements: statements . statement
    4           | statements . function
    5 function: . LBRACE statements RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    LBRACE       shift, and go to state 42
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    $default  reduce using rule 1 (program)

    function             go to state 43
    statement            go to state 44
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

    6 statement: expression .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
    7          | expression . SEMICOLON
   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET

    LPAREN      shift, and go to state 45
    LBRACKET    shift, and go to state 46
    SEMICOLON   shift, and go to state 47
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    $default  reduce using rule 6 (statement)

    operador    go to state 55
    indexArray  go to state 56


State 23

    8 statement: declaration .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
    9          | declaration . SEMICOLON

    SEMICOLON  shift, and go to state 57

    $default  reduce using rule 8 (statement)


State 24

   44 declaration: type . declarator_list
   48 declarator_list: . declarator
   49                | . declarator_list COMMA declarator
   50 declarator: . WORD
   51           | . WORD EQUALS INTEGER
   52           | . WORD LPAREN RPAREN
   53           | . WORD LPAREN parameter_list RPAREN
   54           | . WORD indexArray
   55           | . POINTER LBRACKET RBRACKET

    POINTER  shift, and go to state 58
    WORD     shift, and go to state 59

    declarator_list  go to state 60
    declarator       go to state 61


State 25

   10 statement: if_statement .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   64 if_statement: if_statement . ELSE LBRACE statements RBRACE

    ELSE  shift, and go to state 62

    $default  reduce using rule 10 (statement)


State 26

   11 statement: iteration_statement .

    $default  reduce using rule 11 (statement)


State 27

   12 statement: gets .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   68 gets: gets . SEMICOLON

    SEMICOLON  shift, and go to state 63

    $default  reduce using rule 12 (statement)


State 28

   13 statement: strcmp .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   70 strcmp: strcmp . SEMICOLON

    SEMICOLON  shift, and go to state 64

    $default  reduce using rule 13 (statement)


State 29

   14 statement: system .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   72 system: system . SEMICOLON

    SEMICOLON  shift, and go to state 65

    $default  reduce using rule 14 (statement)


State 30

   15 statement: return .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   74 return: return . SEMICOLON

    SEMICOLON  shift, and go to state 66

    $default  reduce using rule 15 (statement)


State 31

   16 statement: strcpy .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   76 strcpy: strcpy . SEMICOLON

    SEMICOLON  shift, and go to state 67

    $default  reduce using rule 16 (statement)


State 32

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   62 if_statement: IF LPAREN . expression RPAREN LBRACE statements RBRACE
   63             | IF LPAREN . strcmp RPAREN LBRACE statements RBRACE ELSE
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON

    INCREMENT  shift, and go to state 8
    STRCMP     shift, and go to state 13
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 68
    strcmp      go to state 69


State 33

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   65 iteration_statement: WHILE LPAREN . expression RPAREN statement

    INCREMENT  shift, and go to state 8
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 70


State 34

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   66 iteration_statement: FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN function

    INCREMENT  shift, and go to state 8
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 71


State 35

   73 return: RETURN INTEGER .

    $default  reduce using rule 73 (return)


State 36

   17 statement: PRINTF LPAREN . parameter_declaration RPAREN SEMICOLON
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   58 parameter_declaration: . type WORD
   59                      | . type POINTER
   60                      | . type POINTER LBRACKET RBRACKET
   61                      | . PRINTSTRING

    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    PRINTSTRING  shift, and go to state 72

    type                   go to state 73
    parameter_declaration  go to state 74


State 37

   75 strcpy: STRCPY LPAREN . WORD COMMA WORD RPAREN

    WORD  shift, and go to state 75


State 38

   69 strcmp: STRCMP LPAREN . WORD COMMA PRINTSTRING RPAREN

    WORD  shift, and go to state 76


State 39

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   67 gets: GETS LPAREN . expression RPAREN

    INCREMENT  shift, and go to state 8
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 77


State 40

   71 system: SYSTEM LPAREN . PRINTSTRING RPAREN

    PRINTSTRING  shift, and go to state 78


State 41

    0 $accept: program $end .

    $default  accept


State 42

    2 statements: . statement
    3           | . statements statement
    4           | . statements function
    5 function: LBRACE . statements RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    statements           go to state 79
    statement            go to state 21
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 43

    4 statements: statements function .

    $default  reduce using rule 4 (statements)


State 44

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 45

   29 expression: expression LPAREN . WORD RPAREN
   30           | expression LPAREN . WORD indexArray RPAREN

    WORD  shift, and go to state 80


State 46

   27 expression: expression LBRACKET . WORD RBRACKET
   43 indexArray: LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 81
    WORD     shift, and go to state 82


State 47

    7 statement: expression SEMICOLON .

    $default  reduce using rule 7 (statement)


State 48

   31 expression: expression EQUALS . WORD
   32           | expression EQUALS . cast
   33           | expression EQUALS . INTEGER
   77 cast: . LPAREN type RPAREN
   78     | . LPAREN type POINTER RPAREN

    LPAREN   shift, and go to state 83
    INTEGER  shift, and go to state 84
    WORD     shift, and go to state 85

    cast  go to state 86


State 49

   35 expression: expression EQUALITY . WORD
   36           | expression EQUALITY . INTEGER

    INTEGER  shift, and go to state 87
    WORD     shift, and go to state 88


State 50

   37 expression: expression INEQUALITY . WORD
   38           | expression INEQUALITY . INTEGER

    INTEGER  shift, and go to state 89
    WORD     shift, and go to state 90


State 51

   39 expression: expression LTHAN . WORD
   40           | expression LTHAN . INTEGER

    INTEGER  shift, and go to state 91
    WORD     shift, and go to state 92


State 52

   41 expression: expression GTHAN . WORD
   42           | expression GTHAN . INTEGER

    INTEGER  shift, and go to state 93
    WORD     shift, and go to state 94


State 53

   20 operador: PLUS . EQUALS
   22         | PLUS .  [INTEGER]

    EQUALS  shift, and go to state 95

    $default  reduce using rule 22 (operador)


State 54

   21 operador: MINUS .

    $default  reduce using rule 21 (operador)


State 55

   34 expression: expression operador . INTEGER

    INTEGER  shift, and go to state 96


State 56

   28 expression: expression indexArray .

    $default  reduce using rule 28 (expression)


State 57

    9 statement: declaration SEMICOLON .

    $default  reduce using rule 9 (statement)


State 58

   55 declarator: POINTER . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 97


State 59

   43 indexArray: . LBRACKET INTEGER RBRACKET
   50 declarator: WORD .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, COMMA, SEMICOLON, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   51           | WORD . EQUALS INTEGER
   52           | WORD . LPAREN RPAREN
   53           | WORD . LPAREN parameter_list RPAREN
   54           | WORD . indexArray

    LPAREN    shift, and go to state 98
    LBRACKET  shift, and go to state 99
    EQUALS    shift, and go to state 100

    $default  reduce using rule 50 (declarator)

    indexArray  go to state 101


State 60

   44 declaration: type declarator_list .  [$end, IF, WHILE, FOR, INT, CHAR, VOID, RETURN, LBRACE, RBRACE, SEMICOLON, INCREMENT, PRINTF, COMMENTLINE, COMMENT, STRCPY, STRCMP, GETS, SYSTEM, POINTER, INTEGER, WORD]
   49 declarator_list: declarator_list . COMMA declarator

    COMMA  shift, and go to state 102

    $default  reduce using rule 44 (declaration)


State 61

   48 declarator_list: declarator .

    $default  reduce using rule 48 (declarator_list)


State 62

   64 if_statement: if_statement ELSE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 103


State 63

   68 gets: gets SEMICOLON .

    $default  reduce using rule 68 (gets)


State 64

   70 strcmp: strcmp SEMICOLON .

    $default  reduce using rule 70 (strcmp)


State 65

   72 system: system SEMICOLON .

    $default  reduce using rule 72 (system)


State 66

   74 return: return SEMICOLON .

    $default  reduce using rule 74 (return)


State 67

   76 strcpy: strcpy SEMICOLON .

    $default  reduce using rule 76 (strcpy)


State 68

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   62 if_statement: IF LPAREN expression . RPAREN LBRACE statements RBRACE

    LPAREN      shift, and go to state 45
    RPAREN      shift, and go to state 104
    LBRACKET    shift, and go to state 46
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 69

   63 if_statement: IF LPAREN strcmp . RPAREN LBRACE statements RBRACE ELSE
   70 strcmp: strcmp . SEMICOLON

    RPAREN     shift, and go to state 105
    SEMICOLON  shift, and go to state 64


State 70

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   65 iteration_statement: WHILE LPAREN expression . RPAREN statement

    LPAREN      shift, and go to state 45
    RPAREN      shift, and go to state 106
    LBRACKET    shift, and go to state 46
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 71

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   66 iteration_statement: FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN function

    LPAREN      shift, and go to state 45
    LBRACKET    shift, and go to state 46
    SEMICOLON   shift, and go to state 107
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 72

   61 parameter_declaration: PRINTSTRING .

    $default  reduce using rule 61 (parameter_declaration)


State 73

   58 parameter_declaration: type . WORD
   59                      | type . POINTER
   60                      | type . POINTER LBRACKET RBRACKET

    POINTER  shift, and go to state 108
    WORD     shift, and go to state 109


State 74

   17 statement: PRINTF LPAREN parameter_declaration . RPAREN SEMICOLON

    RPAREN  shift, and go to state 110


State 75

   75 strcpy: STRCPY LPAREN WORD . COMMA WORD RPAREN

    COMMA  shift, and go to state 111


State 76

   69 strcmp: STRCMP LPAREN WORD . COMMA PRINTSTRING RPAREN

    COMMA  shift, and go to state 112


State 77

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   67 gets: GETS LPAREN expression . RPAREN

    LPAREN      shift, and go to state 45
    RPAREN      shift, and go to state 113
    LBRACKET    shift, and go to state 46
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 78

   71 system: SYSTEM LPAREN PRINTSTRING . RPAREN

    RPAREN  shift, and go to state 114


State 79

    3 statements: statements . statement
    4           | statements . function
    5 function: . LBRACE statements RBRACE
    5         | LBRACE statements . RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    LBRACE       shift, and go to state 42
    RBRACE       shift, and go to state 115
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    function             go to state 43
    statement            go to state 44
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 80

   29 expression: expression LPAREN WORD . RPAREN
   30           | expression LPAREN WORD . indexArray RPAREN
   43 indexArray: . LBRACKET INTEGER RBRACKET

    RPAREN    shift, and go to state 116
    LBRACKET  shift, and go to state 99

    indexArray  go to state 117


State 81

   43 indexArray: LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 118


State 82

   27 expression: expression LBRACKET WORD . RBRACKET

    RBRACKET  shift, and go to state 119


State 83

   45 type: . INT
   46     | . CHAR
   47     | . VOID
   77 cast: LPAREN . type RPAREN
   78     | LPAREN . type POINTER RPAREN

    INT   shift, and go to state 4
    CHAR  shift, and go to state 5
    VOID  shift, and go to state 6

    type  go to state 120


State 84

   33 expression: expression EQUALS INTEGER .

    $default  reduce using rule 33 (expression)


State 85

   31 expression: expression EQUALS WORD .

    $default  reduce using rule 31 (expression)


State 86

   32 expression: expression EQUALS cast .

    $default  reduce using rule 32 (expression)


State 87

   36 expression: expression EQUALITY INTEGER .

    $default  reduce using rule 36 (expression)


State 88

   35 expression: expression EQUALITY WORD .

    $default  reduce using rule 35 (expression)


State 89

   38 expression: expression INEQUALITY INTEGER .

    $default  reduce using rule 38 (expression)


State 90

   37 expression: expression INEQUALITY WORD .

    $default  reduce using rule 37 (expression)


State 91

   40 expression: expression LTHAN INTEGER .

    $default  reduce using rule 40 (expression)


State 92

   39 expression: expression LTHAN WORD .

    $default  reduce using rule 39 (expression)


State 93

   42 expression: expression GTHAN INTEGER .

    $default  reduce using rule 42 (expression)


State 94

   41 expression: expression GTHAN WORD .

    $default  reduce using rule 41 (expression)


State 95

   20 operador: PLUS EQUALS .

    $default  reduce using rule 20 (operador)


State 96

   34 expression: expression operador INTEGER .

    $default  reduce using rule 34 (expression)


State 97

   55 declarator: POINTER LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 121


State 98

   45 type: . INT
   46     | . CHAR
   47     | . VOID
   52 declarator: WORD LPAREN . RPAREN
   53           | WORD LPAREN . parameter_list RPAREN
   56 parameter_list: . parameter_declaration
   57               | . parameter_list COMMA parameter_declaration
   58 parameter_declaration: . type WORD
   59                      | . type POINTER
   60                      | . type POINTER LBRACKET RBRACKET
   61                      | . PRINTSTRING

    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RPAREN       shift, and go to state 122
    PRINTSTRING  shift, and go to state 72

    type                   go to state 73
    parameter_list         go to state 123
    parameter_declaration  go to state 124


State 99

   43 indexArray: LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 81


State 100

   51 declarator: WORD EQUALS . INTEGER

    INTEGER  shift, and go to state 125


State 101

   54 declarator: WORD indexArray .

    $default  reduce using rule 54 (declarator)


State 102

   49 declarator_list: declarator_list COMMA . declarator
   50 declarator: . WORD
   51           | . WORD EQUALS INTEGER
   52           | . WORD LPAREN RPAREN
   53           | . WORD LPAREN parameter_list RPAREN
   54           | . WORD indexArray
   55           | . POINTER LBRACKET RBRACKET

    POINTER  shift, and go to state 58
    WORD     shift, and go to state 59

    declarator  go to state 126


State 103

    2 statements: . statement
    3           | . statements statement
    4           | . statements function
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   64             | if_statement ELSE LBRACE . statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    statements           go to state 127
    statement            go to state 21
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 104

   62 if_statement: IF LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 128


State 105

   63 if_statement: IF LPAREN strcmp RPAREN . LBRACE statements RBRACE ELSE

    LBRACE  shift, and go to state 129


State 106

    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   65                    | WHILE LPAREN expression RPAREN . statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    statement            go to state 130
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 107

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   66 iteration_statement: FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN function

    INCREMENT  shift, and go to state 8
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 131


State 108

   59 parameter_declaration: type POINTER .  [RPAREN, COMMA]
   60                      | type POINTER . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 132

    $default  reduce using rule 59 (parameter_declaration)


State 109

   58 parameter_declaration: type WORD .

    $default  reduce using rule 58 (parameter_declaration)


State 110

   17 statement: PRINTF LPAREN parameter_declaration RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 111

   75 strcpy: STRCPY LPAREN WORD COMMA . WORD RPAREN

    WORD  shift, and go to state 134


State 112

   69 strcmp: STRCMP LPAREN WORD COMMA . PRINTSTRING RPAREN

    PRINTSTRING  shift, and go to state 135


State 113

   67 gets: GETS LPAREN expression RPAREN .

    $default  reduce using rule 67 (gets)


State 114

   71 system: SYSTEM LPAREN PRINTSTRING RPAREN .

    $default  reduce using rule 71 (system)


State 115

    5 function: LBRACE statements RBRACE .

    $default  reduce using rule 5 (function)


State 116

   29 expression: expression LPAREN WORD RPAREN .

    $default  reduce using rule 29 (expression)


State 117

   30 expression: expression LPAREN WORD indexArray . RPAREN

    RPAREN  shift, and go to state 136


State 118

   43 indexArray: LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 43 (indexArray)


State 119

   27 expression: expression LBRACKET WORD RBRACKET .

    $default  reduce using rule 27 (expression)


State 120

   77 cast: LPAREN type . RPAREN
   78     | LPAREN type . POINTER RPAREN

    RPAREN   shift, and go to state 137
    POINTER  shift, and go to state 138


State 121

   55 declarator: POINTER LBRACKET RBRACKET .

    $default  reduce using rule 55 (declarator)


State 122

   52 declarator: WORD LPAREN RPAREN .

    $default  reduce using rule 52 (declarator)


State 123

   53 declarator: WORD LPAREN parameter_list . RPAREN
   57 parameter_list: parameter_list . COMMA parameter_declaration

    RPAREN  shift, and go to state 139
    COMMA   shift, and go to state 140


State 124

   56 parameter_list: parameter_declaration .

    $default  reduce using rule 56 (parameter_list)


State 125

   51 declarator: WORD EQUALS INTEGER .

    $default  reduce using rule 51 (declarator)


State 126

   49 declarator_list: declarator_list COMMA declarator .

    $default  reduce using rule 49 (declarator_list)


State 127

    3 statements: statements . statement
    4           | statements . function
    5 function: . LBRACE statements RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   64             | if_statement ELSE LBRACE statements . RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    LBRACE       shift, and go to state 42
    RBRACE       shift, and go to state 141
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    function             go to state 43
    statement            go to state 44
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 128

    2 statements: . statement
    3           | . statements statement
    4           | . statements function
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   62             | IF LPAREN expression RPAREN LBRACE . statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    statements           go to state 142
    statement            go to state 21
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 129

    2 statements: . statement
    3           | . statements statement
    4           | . statements function
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   63             | IF LPAREN strcmp RPAREN LBRACE . statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    statements           go to state 143
    statement            go to state 21
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 130

   65 iteration_statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 65 (iteration_statement)


State 131

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   66 iteration_statement: FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN function

    LPAREN      shift, and go to state 45
    LBRACKET    shift, and go to state 46
    SEMICOLON   shift, and go to state 144
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 132

   60 parameter_declaration: type POINTER LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 145


State 133

   17 statement: PRINTF LPAREN parameter_declaration RPAREN SEMICOLON .

    $default  reduce using rule 17 (statement)


State 134

   75 strcpy: STRCPY LPAREN WORD COMMA WORD . RPAREN

    RPAREN  shift, and go to state 146


State 135

   69 strcmp: STRCMP LPAREN WORD COMMA PRINTSTRING . RPAREN

    RPAREN  shift, and go to state 147


State 136

   30 expression: expression LPAREN WORD indexArray RPAREN .

    $default  reduce using rule 30 (expression)


State 137

   77 cast: LPAREN type RPAREN .

    $default  reduce using rule 77 (cast)


State 138

   78 cast: LPAREN type POINTER . RPAREN

    RPAREN  shift, and go to state 148


State 139

   53 declarator: WORD LPAREN parameter_list RPAREN .

    $default  reduce using rule 53 (declarator)


State 140

   45 type: . INT
   46     | . CHAR
   47     | . VOID
   57 parameter_list: parameter_list COMMA . parameter_declaration
   58 parameter_declaration: . type WORD
   59                      | . type POINTER
   60                      | . type POINTER LBRACKET RBRACKET
   61                      | . PRINTSTRING

    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    PRINTSTRING  shift, and go to state 72

    type                   go to state 73
    parameter_declaration  go to state 149


State 141

   64 if_statement: if_statement ELSE LBRACE statements RBRACE .

    $default  reduce using rule 64 (if_statement)


State 142

    3 statements: statements . statement
    4           | statements . function
    5 function: . LBRACE statements RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   62             | IF LPAREN expression RPAREN LBRACE statements . RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    LBRACE       shift, and go to state 42
    RBRACE       shift, and go to state 150
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    function             go to state 43
    statement            go to state 44
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 143

    3 statements: statements . statement
    4           | statements . function
    5 function: . LBRACE statements RBRACE
    6 statement: . expression
    7          | . expression SEMICOLON
    8          | . declaration
    9          | . declaration SEMICOLON
   10          | . if_statement
   11          | . iteration_statement
   12          | . gets
   13          | . strcmp
   14          | . system
   15          | . return
   16          | . strcpy
   17          | . PRINTF LPAREN parameter_declaration RPAREN SEMICOLON
   18          | . COMMENTLINE
   19          | . COMMENT
   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   44 declaration: . type declarator_list
   45 type: . INT
   46     | . CHAR
   47     | . VOID
   62 if_statement: . IF LPAREN expression RPAREN LBRACE statements RBRACE
   63             | . IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE
   63             | IF LPAREN strcmp RPAREN LBRACE statements . RBRACE ELSE
   64             | . if_statement ELSE LBRACE statements RBRACE
   65 iteration_statement: . WHILE LPAREN expression RPAREN statement
   66                    | . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function
   67 gets: . GETS LPAREN expression RPAREN
   68     | . gets SEMICOLON
   69 strcmp: . STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN
   70       | . strcmp SEMICOLON
   71 system: . SYSTEM LPAREN PRINTSTRING RPAREN
   72       | . system SEMICOLON
   73 return: . RETURN INTEGER
   74       | . return SEMICOLON
   75 strcpy: . STRCPY LPAREN WORD COMMA WORD RPAREN
   76       | . strcpy SEMICOLON

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    INT          shift, and go to state 4
    CHAR         shift, and go to state 5
    VOID         shift, and go to state 6
    RETURN       shift, and go to state 7
    LBRACE       shift, and go to state 42
    RBRACE       shift, and go to state 151
    INCREMENT    shift, and go to state 8
    PRINTF       shift, and go to state 9
    COMMENTLINE  shift, and go to state 10
    COMMENT      shift, and go to state 11
    STRCPY       shift, and go to state 12
    STRCMP       shift, and go to state 13
    GETS         shift, and go to state 14
    SYSTEM       shift, and go to state 15
    POINTER      shift, and go to state 16
    INTEGER      shift, and go to state 17
    WORD         shift, and go to state 18

    function             go to state 43
    statement            go to state 44
    expression           go to state 22
    declaration          go to state 23
    type                 go to state 24
    if_statement         go to state 25
    iteration_statement  go to state 26
    gets                 go to state 27
    strcmp               go to state 28
    system               go to state 29
    return               go to state 30
    strcpy               go to state 31


State 144

   23 expression: . WORD
   24           | . INTEGER
   25           | . POINTER
   26           | . INCREMENT
   27           | . expression LBRACKET WORD RBRACKET
   28           | . expression indexArray
   29           | . expression LPAREN WORD RPAREN
   30           | . expression LPAREN WORD indexArray RPAREN
   31           | . expression EQUALS WORD
   32           | . expression EQUALS cast
   33           | . expression EQUALS INTEGER
   34           | . expression operador INTEGER
   35           | . expression EQUALITY WORD
   36           | . expression EQUALITY INTEGER
   37           | . expression INEQUALITY WORD
   38           | . expression INEQUALITY INTEGER
   39           | . expression LTHAN WORD
   40           | . expression LTHAN INTEGER
   41           | . expression GTHAN WORD
   42           | . expression GTHAN INTEGER
   66 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN function

    INCREMENT  shift, and go to state 8
    POINTER    shift, and go to state 16
    INTEGER    shift, and go to state 17
    WORD       shift, and go to state 18

    expression  go to state 152


State 145

   60 parameter_declaration: type POINTER LBRACKET RBRACKET .

    $default  reduce using rule 60 (parameter_declaration)


State 146

   75 strcpy: STRCPY LPAREN WORD COMMA WORD RPAREN .

    $default  reduce using rule 75 (strcpy)


State 147

   69 strcmp: STRCMP LPAREN WORD COMMA PRINTSTRING RPAREN .

    $default  reduce using rule 69 (strcmp)


State 148

   78 cast: LPAREN type POINTER RPAREN .

    $default  reduce using rule 78 (cast)


State 149

   57 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 57 (parameter_list)


State 150

   62 if_statement: IF LPAREN expression RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 62 (if_statement)


State 151

   63 if_statement: IF LPAREN strcmp RPAREN LBRACE statements RBRACE . ELSE

    ELSE  shift, and go to state 153


State 152

   20 operador: . PLUS EQUALS
   21         | . MINUS
   22         | . PLUS
   27 expression: expression . LBRACKET WORD RBRACKET
   28           | expression . indexArray
   29           | expression . LPAREN WORD RPAREN
   30           | expression . LPAREN WORD indexArray RPAREN
   31           | expression . EQUALS WORD
   32           | expression . EQUALS cast
   33           | expression . EQUALS INTEGER
   34           | expression . operador INTEGER
   35           | expression . EQUALITY WORD
   36           | expression . EQUALITY INTEGER
   37           | expression . INEQUALITY WORD
   38           | expression . INEQUALITY INTEGER
   39           | expression . LTHAN WORD
   40           | expression . LTHAN INTEGER
   41           | expression . GTHAN WORD
   42           | expression . GTHAN INTEGER
   43 indexArray: . LBRACKET INTEGER RBRACKET
   66 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN function

    LPAREN      shift, and go to state 45
    RPAREN      shift, and go to state 154
    LBRACKET    shift, and go to state 46
    EQUALS      shift, and go to state 48
    EQUALITY    shift, and go to state 49
    INEQUALITY  shift, and go to state 50
    LTHAN       shift, and go to state 51
    GTHAN       shift, and go to state 52
    PLUS        shift, and go to state 53
    MINUS       shift, and go to state 54

    operador    go to state 55
    indexArray  go to state 56


State 153

   63 if_statement: IF LPAREN strcmp RPAREN LBRACE statements RBRACE ELSE .

    $default  reduce using rule 63 (if_statement)


State 154

    5 function: . LBRACE statements RBRACE
   66 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . function

    LBRACE  shift, and go to state 42

    function  go to state 155


State 155

   66 iteration_statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN function .

    $default  reduce using rule 66 (iteration_statement)
